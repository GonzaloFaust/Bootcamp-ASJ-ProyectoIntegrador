{"ast":null,"code":"import { ordenCompra } from '../../assets/data/ordenes';\nimport { OrderState } from '../models/orderState';\nimport * as i0 from \"@angular/core\";\nexport class OrdenesService {\n  constructor() {\n    this.PREFIX = \"OC\";\n    this.counter = 1;\n    this.ordersData = [];\n    this.orderTemplate = structuredClone(blankOrder);\n    this.ordersData = JSON.parse(localStorage.getItem('orders')) || [...ordenCompra];\n  }\n  getOrdenesCompra() {\n    return this.ordersData;\n  }\n  getOrdenById(id) {\n    const ord = this.ordersData.filter(o => o.numero_orden_compra == id)[0];\n    this.orderTemplate = ord;\n    console.log(this.orderTemplate);\n    return ord;\n  }\n  addOrden() {\n    let newId = this.PREFIX + this.counter;\n    while (this.ordersData.some(p => p.numero_orden_compra === newId)) {\n      this.counter++;\n      newId = this.PREFIX + this.counter;\n    }\n    this.ordersData.push({\n      ...this.orderTemplate,\n      numero_orden_compra: this.PREFIX + this.counter++\n    });\n    this.orderTemplate = structuredClone(blankOrder);\n    this.saveData();\n  }\n  editOrdenCompra(id) {\n    this.orderTemplate = {\n      ...structuredClone(this.orderTemplate),\n      numero_orden_compra: id\n    };\n    this.saveData();\n    this.orderTemplate = structuredClone(blankOrder);\n  }\n  deleteOrden(id) {\n    let ord = this.getOrdenById(id);\n    ord.state = OrderState.cancelado;\n    this.saveData();\n  }\n  saveData() {\n    localStorage.setItem('orders', JSON.stringify(this.ordersData));\n  }\n  static #_ = this.ɵfac = function OrdenesService_Factory(t) {\n    return new (t || OrdenesService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrdenesService,\n    factory: OrdenesService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport const blankOrder = {\n  numero_orden_compra: \"\",\n  state: \"pendiente\",\n  fecha_emision: \"\",\n  fecha_entrega_esperada: \"\",\n  informacion_recepcion: {\n    direccion: {\n      calle_numero: \"\",\n      cp: \"\",\n      localidad: \"\",\n      provincia: \"\",\n      pais: \"\"\n    }\n  },\n  cod_proveedor: \"\",\n  productos: [{\n    codigo_SKU: \"\",\n    cantidad: 0\n  }]\n};","map":{"version":3,"names":["ordenCompra","OrderState","OrdenesService","constructor","PREFIX","counter","ordersData","orderTemplate","structuredClone","blankOrder","JSON","parse","localStorage","getItem","getOrdenesCompra","getOrdenById","id","ord","filter","o","numero_orden_compra","console","log","addOrden","newId","some","p","push","saveData","editOrdenCompra","deleteOrden","state","cancelado","setItem","stringify","_","_2","factory","ɵfac","providedIn","fecha_emision","fecha_entrega_esperada","informacion_recepcion","direccion","calle_numero","cp","localidad","provincia","pais","cod_proveedor","productos","codigo_SKU","cantidad"],"sources":["C:\\Users\\gfaust\\Desktop\\proyecto integrador\\entrega final\\front\\src\\app\\services\\ordenes.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ordenCompra } from '../../assets/data/ordenes';\nimport { Order } from '../models/order';\nimport { OrderState } from '../models/orderState';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdenesService {\n\n  PREFIX: string = \"OC\";\n  counter: number = 1;\n\n  ordersData: Array<Order> = []\n\n  orderTemplate: Order = structuredClone(blankOrder);\n\n  constructor() {\n    this.ordersData = JSON.parse(localStorage.getItem('orders')!) || [...ordenCompra]\n  }\n\n  public getOrdenesCompra(): Order[] {\n    return this.ordersData;\n  }\n\n  public getOrdenById(id: string): Order {\n    const ord= this.ordersData.filter(o => o.numero_orden_compra == id)[0]\n    this.orderTemplate = ord;\n    console.log(this.orderTemplate)\n    return ord;\n  }\n\n  public addOrden(): void {\n    let newId = this.PREFIX + this.counter;\n    while (this.ordersData.some(p => p.numero_orden_compra === newId)) {\n      this.counter++;\n      newId = this.PREFIX + this.counter;\n    }\n    this.ordersData.push({ ...this.orderTemplate, numero_orden_compra: this.PREFIX+this.counter++ });\n    this.orderTemplate = structuredClone(blankOrder)\n    this.saveData()\n  }\n\n  public editOrdenCompra(id:string): void {\n  this.orderTemplate = { ...structuredClone(this.orderTemplate), numero_orden_compra:id }\n  this.saveData()\n  this.orderTemplate = structuredClone(blankOrder)\n}\n\n  public deleteOrden(id: string): void {\n    let ord= this.getOrdenById(id);\n    ord.state= OrderState.cancelado\n    this.saveData()\n  }\n\n\n  private saveData() {\n    localStorage.setItem('orders', JSON.stringify(this.ordersData))\n  }\n}\n\nexport const blankOrder: Order = {\n  numero_orden_compra: \"\",\n  state: \"pendiente\" as OrderState,\n  fecha_emision: \"\",\n  fecha_entrega_esperada: \"\",\n  informacion_recepcion: {\n    direccion: {\n      calle_numero: \"\",\n      cp: \"\",\n      localidad: \"\",\n      provincia: \"\",\n      pais: \"\"\n    }\n  },\n  cod_proveedor: \"\",\n  productos: [\n    {\n      codigo_SKU: \"\",\n      cantidad: 0\n    }\n  ]\n}\n\n\n//   public deleteProducto() {\n//   this.productosData = this.productosData.filter(p => p.id !== this.productTemplate.id)\n//   this.saveData()\n// }\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}