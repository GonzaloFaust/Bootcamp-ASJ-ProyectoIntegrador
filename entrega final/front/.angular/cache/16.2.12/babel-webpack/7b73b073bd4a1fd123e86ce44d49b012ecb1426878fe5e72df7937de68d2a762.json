{"ast":null,"code":"import { supplierCategory } from '../models/supplierCategory';\nimport { CondicionIva } from '../models/condicionIva';\nimport * as i0 from \"@angular/core\";\nexport class ValidationsService {\n  constructor() {}\n  validateProvider(form) {\n    console.log(form.value);\n  }\n  validateProduct(form) {}\n  validateOrder(form) {}\n  validateEmail(control) {\n    const emailPattern = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!control.value || !emailPattern.test(control.value)) {\n      return {\n        'validEmail': false\n      };\n    }\n    return {\n      'validEmail': true\n    };\n  }\n  validateCuit(control) {\n    const cuitPattern = /\\d{2}-\\d{8}-\\d{1}/;\n    if (!control.value || !cuitPattern.test(control.value)) {\n      return {\n        'validCuit': false\n      };\n    }\n    return {\n      'validCuit': true\n    };\n  }\n  notEmpty(control) {\n    return {\n      [control.key]: control.value && control.value != \"\"\n    };\n  }\n  isValidRubro(control) {\n    return {\n      validRubro: Object.values(supplierCategory).includes(control.value)\n    };\n  }\n  isValidCondicionIva(control) {\n    return {\n      validCondicion: Object.values(CondicionIva).includes(control.value)\n    };\n  }\n  static #_ = this.ɵfac = function ValidationsService_Factory(t) {\n    return new (t || ValidationsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ValidationsService,\n    factory: ValidationsService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["supplierCategory","CondicionIva","ValidationsService","constructor","validateProvider","form","console","log","value","validateProduct","validateOrder","validateEmail","control","emailPattern","test","validateCuit","cuitPattern","notEmpty","key","isValidRubro","validRubro","Object","values","includes","isValidCondicionIva","validCondicion","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gfaust\\Desktop\\proyecto integrador\\entrega final\\front\\src\\app\\services\\validations.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FormControl, NgForm } from '@angular/forms';\n\nimport { supplierCategory } from '../models/supplierCategory';\nimport { CondicionIva } from '../models/condicionIva';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationsService {\n\n  constructor() {\n\n   }\n\n   validateProvider(form: NgForm){\n    console.log(form.value)\n   }\n\n   validateProduct(form:NgForm){\n\n   }\n\n   validateOrder(form:NgForm){\n\n   }\n\n   private validateEmail(control:any) {\n    const emailPattern = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n    if (!control.value || !emailPattern.test(control.value)) {\n      return { 'validEmail': false };\n    }\n\n    return { 'validEmail': true }\n  }\n\n \n  private validateCuit(control: any) {\n    const cuitPattern = /\\d{2}-\\d{8}-\\d{1}/;\n\n    if (!control.value || !cuitPattern.test(control.value)) {\n      return { 'validCuit': false };\n    }\n\n    return { 'validCuit': true };\n  }\n\n  private notEmpty(control:any){\n    return {[control.key]:control.value && control.value!=\"\"}\n  }\n\n  private isValidRubro(control:FormControl){\n    return {validRubro: Object.values(supplierCategory).includes(control.value)}\n  }\n\n  private isValidCondicionIva(control:FormControl){\n    return {validCondicion: Object.values(CondicionIva).includes(control.value)}\n  }\n}\n"],"mappings":"AAGA,SAASA,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,YAAY,QAAQ,wBAAwB;;AAMrD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAA,GAEC;EAEAC,gBAAgBA,CAACC,IAAY;IAC5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,KAAK,CAAC;EACxB;EAEAC,eAAeA,CAACJ,IAAW,GAE3B;EAEAK,aAAaA,CAACL,IAAW,GAEzB;EAEQM,aAAaA,CAACC,OAAW;IAChC,MAAMC,YAAY,GAAG,iDAAiD;IAEtE,IAAI,CAACD,OAAO,CAACJ,KAAK,IAAI,CAACK,YAAY,CAACC,IAAI,CAACF,OAAO,CAACJ,KAAK,CAAC,EAAE;MACvD,OAAO;QAAE,YAAY,EAAE;MAAK,CAAE;;IAGhC,OAAO;MAAE,YAAY,EAAE;IAAI,CAAE;EAC/B;EAGQO,YAAYA,CAACH,OAAY;IAC/B,MAAMI,WAAW,GAAG,mBAAmB;IAEvC,IAAI,CAACJ,OAAO,CAACJ,KAAK,IAAI,CAACQ,WAAW,CAACF,IAAI,CAACF,OAAO,CAACJ,KAAK,CAAC,EAAE;MACtD,OAAO;QAAE,WAAW,EAAE;MAAK,CAAE;;IAG/B,OAAO;MAAE,WAAW,EAAE;IAAI,CAAE;EAC9B;EAEQS,QAAQA,CAACL,OAAW;IAC1B,OAAO;MAAC,CAACA,OAAO,CAACM,GAAG,GAAEN,OAAO,CAACJ,KAAK,IAAII,OAAO,CAACJ,KAAK,IAAE;IAAE,CAAC;EAC3D;EAEQW,YAAYA,CAACP,OAAmB;IACtC,OAAO;MAACQ,UAAU,EAAEC,MAAM,CAACC,MAAM,CAACtB,gBAAgB,CAAC,CAACuB,QAAQ,CAACX,OAAO,CAACJ,KAAK;IAAC,CAAC;EAC9E;EAEQgB,mBAAmBA,CAACZ,OAAmB;IAC7C,OAAO;MAACa,cAAc,EAAEJ,MAAM,CAACC,MAAM,CAACrB,YAAY,CAAC,CAACsB,QAAQ,CAACX,OAAO,CAACJ,KAAK;IAAC,CAAC;EAC9E;EAAC,QAAAkB,CAAA,G;qBAjDUxB,kBAAkB;EAAA;EAAA,QAAAyB,EAAA,G;WAAlBzB,kBAAkB;IAAA0B,OAAA,EAAlB1B,kBAAkB,CAAA2B,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}