{"ast":null,"code":"import { proveedor } from '../../assets/data/proveedores';\nimport * as i0 from \"@angular/core\";\nexport class ProveedoresService {\n  constructor() {\n    this.proveedoresData = [];\n    this.PREFIX = \"PROV\";\n    this.counter = 1;\n    this.proveedorTemplate = structuredClone(blankProvider);\n    this.proveedoresData = JSON.parse(localStorage.getItem('suppliers')) || [...proveedor];\n  }\n  getProveedores() {\n    return this.proveedoresData;\n  }\n  getProveedorById(id) {\n    const prov = this.proveedoresData.filter(p => p.codigo == id)[0];\n    this.proveedorTemplate = prov;\n    return prov;\n  }\n  addProveedor() {\n    let newId = this.PREFIX + this.counter;\n    while (this.proveedoresData.some(p => p.codigo === newId)) {\n      this.counter++;\n      newId = this.PREFIX + this.counter;\n    }\n    this.proveedoresData.push({\n      ...this.proveedorTemplate,\n      codigo: newId\n    });\n    this.proveedorTemplate = structuredClone(blankProvider);\n    this.saveData();\n  }\n  editProveedor(id) {\n    this.proveedorTemplate = {\n      ...structuredClone(this.proveedorTemplate),\n      codigo: id\n    };\n    this.saveData();\n    this.proveedorTemplate = structuredClone(blankProvider);\n  }\n  deleteProveedor(id) {\n    let prov = this.getProveedorById(id);\n    prov.active = false;\n    this.saveData();\n  }\n  saveData() {\n    localStorage.setItem('suppliers', JSON.stringify(this.proveedoresData));\n  }\n  static #_ = this.ɵfac = function ProveedoresService_Factory(t) {\n    return new (t || ProveedoresService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProveedoresService,\n    factory: ProveedoresService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport const blankProvider = {\n  codigo: \"\",\n  razon_social: \"\",\n  rubro: \"\",\n  sitio_web: \"\",\n  email: \"\",\n  telefono: \"\",\n  direccion: {\n    calle_numero: \"\",\n    cp: \"\",\n    pais: \"\",\n    provincia: \"\",\n    localidad: \"\"\n  },\n  datos_fiscales: {\n    cuit: \"\",\n    condicion_iva: \"\"\n  },\n  datos_contacto: {\n    nombre: \"\",\n    apellido: \"\",\n    telefono_contacto: \"\",\n    email_contacto: \"\",\n    rol: \"\"\n  },\n  active: true\n};","map":{"version":3,"names":["proveedor","ProveedoresService","constructor","proveedoresData","PREFIX","counter","proveedorTemplate","structuredClone","blankProvider","JSON","parse","localStorage","getItem","getProveedores","getProveedorById","id","prov","filter","p","codigo","addProveedor","newId","some","push","saveData","editProveedor","deleteProveedor","active","setItem","stringify","_","_2","factory","ɵfac","providedIn","razon_social","rubro","sitio_web","email","telefono","direccion","calle_numero","cp","pais","provincia","localidad","datos_fiscales","cuit","condicion_iva","datos_contacto","nombre","apellido","telefono_contacto","email_contacto","rol"],"sources":["C:\\Users\\gfaust\\Desktop\\proyecto integrador\\entrega final\\front\\src\\app\\services\\proveedores.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { proveedor } from '../../assets/data/proveedores'\nimport { NgForm } from '@angular/forms';\nimport { Supplier } from '../models/supplier';\nimport { supplierCategory } from '../models/supplierCategory';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProveedoresService {\n  proveedoresData: Array<Supplier> = []\n\n  PREFIX: string = \"PROV\";\n  counter: number = 1;\n  proveedorTemplate: Supplier = structuredClone(blankProvider);\n\n  constructor() {\n    this.proveedoresData = JSON.parse(localStorage.getItem('suppliers')!) || [...proveedor]\n  }\n\n  public getProveedores(): Supplier[] {\n    return this.proveedoresData;\n  }\n\n  public getProveedorById(id: string): Supplier {\n    const prov = this.proveedoresData.filter(p => p.codigo == id)[0]\n    this.proveedorTemplate = prov;\n    return prov;\n  }\n\n  public addProveedor(): void {\n    let newId = this.PREFIX + this.counter;\n    while (this.proveedoresData.some(p => p.codigo === newId)) {\n      this.counter++;\n      newId = this.PREFIX + this.counter;\n    }\n    this.proveedoresData.push({ ...this.proveedorTemplate, codigo: newId });\n    this.proveedorTemplate = structuredClone(blankProvider)\n    this.saveData()\n  }\n\n  public editProveedor(id:string): void {\n    this.proveedorTemplate = { ...structuredClone(this.proveedorTemplate), codigo:id }\n\n    this.saveData()\n    this.proveedorTemplate = structuredClone(blankProvider)\n  }\n\n  public deleteProveedor(id: string): void {\n    let prov= this.getProveedorById(id)\n    prov.active=false;\n    this.saveData()\n  }\n\n\n  private saveData() {\n    localStorage.setItem('suppliers', JSON.stringify(this.proveedoresData))\n  }\n}\n\n\nexport const blankProvider: Supplier = {\n  codigo: \"\",\n  razon_social: \"\",\n  rubro: \"\" as supplierCategory,\n  sitio_web: \"\",\n  email: \"\",\n  telefono: \"\",\n  direccion: {\n    calle_numero: \"\",\n    cp: \"\",\n    pais: \"\",\n    provincia: \"\",\n    localidad: \"\",\n  },\n  datos_fiscales: {\n    cuit: \"\",\n    condicion_iva: \"\"\n  },\n  datos_contacto: {\n    nombre: \"\",\n    apellido: \"\",\n    telefono_contacto: \"\",\n    email_contacto: \"\",\n    rol: \"\"\n  },\n  active: true\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}